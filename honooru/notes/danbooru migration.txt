copy (select
	id,
	name AS name,
	0 as discord_id
from 
	users)
TO 'E:/cdp_users.csv' WITH header csv;

copy (
	select 
	distinct(p.id), 
	p.uploader_id AS poster_user_id,
	p.created_at AS timestamp,
	CASE
		WHEN (p.is_deleted = false) THEN 1
		ELSE 2
	END AS status,
	CASE WHEN (ac.original_title IS null AND ac.translated_title IS NULL) THEN null ELSE COALESCE(ac.original_title, '') || COALESCE(ac.translated_title, '') END as title, 
	CASE WHEN (ac.original_description IS null AND ac.translated_description IS NULL) THEN null ELSE COALESCE(ac.original_description, '') || COALESCE(ac.translated_description, '') END as description, 
	0 AS last_editor_user_id,
	p.updated_at AS last_edited,
	p.md5 AS md5,
	CASE
		WHEN (rating = 'g') THEN 1
		WHEN (rating = 'q') THEN 2
		WHEN (rating = 's') THEN 2
		WHEN (rating = 'e') THEN 3
	END as rating,
	CASE
		WHEN (p.source LIKE 'file://%') THEN substring(p.source FROM 8)
		ELSE ''
	END AS file_name,
	p.file_ext AS file_extension,
	'' AS iqdb_hash,
	p.source AS source,
	p.file_size AS file_size_bytes,
	COALESCE(ma.duration::int, 0) AS duration_seconds,
	p.image_width AS width,
	p.image_height AS height,
	'' AS file_type
FROM
	posts p
	LEFT JOIN media_assets ma ON p.md5 = ma.md5
	LEFT JOIN artist_commentaries ac ON p.id = ac.post_id
ORDER BY p.id asc
) TO 'E:/cdp_posts.csv' WITH header csv;

copy (select
	id as id,
	name as name,
	CASE
		WHEN (category = 0) THEN 1 -- general => general
		WHEN (category = 1) THEN 2 -- artist => artist
		WHEN (category = 3) THEN 7 -- copyright => source
		WHEN (category = 4 AND NAME SIMILAR TO '%_\((outfit|lanesmash_team|scrim_team|jaeger_team)\)') THEN 4 -- group
		WHEN (category = 4 AND NAME NOT SIMILAR TO '%_\((outfit|lanesmash_team|scrim_team|jaeger_team)\)') THEN 3 -- character
		WHEN (category = 5) THEN 6 -- meta
	END as tag_type,
	created_at as timestamp
from
	tags
) TO 'E:/cdp_tags.csv' WITH header csv;

copy post FROM 'E:/cdp_posts.csv' WITH header csv;
copy tag FROM 'E:/cdp_tags.csv' header csv;

insert into post_tag (post_id, tag_id) 
	select ctc.id, t.id
	from cdp_tag_copy ctc
	left join tag t ON ctc.unnest = t.name;


SELECT setval(pg_get_serial_sequence('app_account','id'), max(id)) FROM app_account;
SELECT setval(pg_get_serial_sequence('post','id'), max(id)) FROM post;
SELECT setval(pg_get_serial_sequence('tag','id'), max(id)) FROM tag;

copy (
	select parent_id AS parent_post_id, id AS child_post_id from posts where parent_id is not null
) TO 'E:/cdp_post_child.csv' WITH header csv;
